#!/bin/bash
shopt -q login_shell || source /etc/profile.d/aliases.sh
hash -p /usr/bin/openssl openssl
export LANG=en_US.UTF-8


# SSH completions

_ssh_hosts () {
  if [ "$1" = ssh ]; then trailing=''; else trailing='":"'; fi
  opts=$(awk "/^Host\\>/ {print \$2${trailing}}" ~/.ssh/config)
  COMPREPLY=( $(compgen -W "$opts" -- "$2") )
}
export COMP_WORDBREAKS=${COMP_WORDBREAKS//:}
complete -F _ssh_hosts ssh
complete -F _ssh_hosts sftp
complete -F _ssh_hosts -f scp


# user defined alias

case "$TERM" in xterm*)  # inside Git Bash
  alias powershell="winpty powershell.exe"
  alias python="winpty python.exe"
;; esac
alias la="ls -a"
alias man="wslbridge -t man"
alias tldr="wslbridge -t tldr"


# start ssh-agent

# use ~/.ssh/.env for terminal tools
_SSH_ENV_FILE=~/.ssh/.env
[ -f $_SSH_ENV_FILE ] && source $_SSH_ENV_FILE

# catch connection failure
if [ "$(ssh-add -l >/dev/null 2>&1; echo $?)" = 2 ]; then

  # clean remnants of prior runs
  rm -rf /tmp/ssh-*
  for pid in $(ps aux | awk '/ssh-agent/ {print $1}'); do
    kill $pid
  done

  # update $_SSH_ENV_FILE - silent
  echo "$(ssh-agent -s | head -n2)" >$_SSH_ENV_FILE
  source $_SSH_ENV_FILE

  # setting vars for windows tools
  winpty setx SSH_AUTH_SOCK $SSH_AUTH_SOCK
  winpty setx SSH_AGENT_PID $SSH_AGENT_PID

  # add key
  ssh-add
fi
